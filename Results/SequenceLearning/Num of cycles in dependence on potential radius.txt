
----------------------------------------------------------------
			TEST Num of cycles in dependence on POTENTIAL_RADIUS
----------------------------------------------------------------

            int inputBits = 100;
            int numColumns = 2048;
            Parameters p = Parameters.getAllDefaultParameters();

            p.Set(KEY.RANDOM, new ThreadSafeRandom(42));
            p.Set(KEY.INPUT_DIMENSIONS, new int[] { inputBits });
            p.Set(KEY.CELLS_PER_COLUMN, 15);
            p.Set(KEY.COLUMN_DIMENSIONS, new int[] { numColumns });


            p.Set(KEY.GLOBAL_INHIBITION, true);
            p.Set(KEY.LOCAL_AREA_DENSITY, -1); // In a case of global inhibition.

            //p.setNumActiveColumnsPerInhArea(10);
            // N of 40 (40= 0.02*2048 columns) active cells required to activate the segment.
            p.setNumActiveColumnsPerInhArea(0.02 * numColumns);
            // Activation threshold is 10 active cells of 40 cells in inhibition area.
       ==>  p.Set(KEY.POTENTIAL_RADIUS, 50); == CONST ==
            p.setActivationThreshold(10);
            p.setInhibitionRadius(15);

            //
            // Stops the bumping of inactive columns.
            p.Set(KEY.MAX_BOOST, 10.0);
            p.Set(KEY.DUTY_CYCLE_PERIOD, 100000);
            p.Set(KEY.MIN_PCT_OVERLAP_DUTY_CYCLES, 0.0-1.0);

            // Max number of synapses on the segment.
            p.setMaxNewSynapsesPerSegmentCount((int)(0.02 * numColumns));
           
            p.setPermanenceIncrement(0.15);
            double max = 20;



Without New-Born effect:
PotRadius / MIN_PCT_OVERLAP_DUTY_CYCLES/ NewBorn  /	Classic
---------------------------------------------------------------------
50	0.00				 ? min
50	0.01				 ? min  	?? min
50	0.25				 17 min  	>>60 min
50	0.50				 12/9 min	32/19 min (zwei Messungen)
50	0.75				   min		>>60 min
50	1.00   				 11/13 min		>>60min	





